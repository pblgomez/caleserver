version: '3.7'

#----------------------------------------------------------#
volumes:
  node-red-modules:  
networks:
  automation:
    driver: bridge
    ipam:
      config:
        - subnet: 172.92.92.0/24
#   lan:
#     driver: macvlan
#     driver_opts:
#       parent: eth0
#     ipam:
#       config:
#         - subnet: "192.168.99.0/24"
#----------------------------------------------------------#
services:
############################################################
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
#     - TZ=Europe/London
    volumes:
      - /media/cached_storage/config/bazarr:/config
      - /media/storage/Videos/Movies/:/movies
      - /media/storage/Videos/TV:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:6767"]
      interval: 30s
      timeout: 10s
      retries: 5
############################################################
  bitwarden:
    image: bitwardenrs/server:raspberry
    container_name: bitwarden
    volumes:
      - /media/cached_storage/config/bitwarden:/data
    ports:
      - 9085:80
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:80"]
      interval: 30s
      timeout: 10s
      retries: 5  
    depends_on:
       - caddy
############################################################
  caddy:
    container_name: caddy
    image: caddy:alpine
    restart: unless-stopped
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - DOMAIN=$DOMAIN
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro                    # For docker
      - /media/storage/config/caddy/Caddyfile:/etc/caddy/Caddyfile  # Caddyfile
      - /media/storage/config/caddy/data:/data/caddy/               # Store certificates
      - /media/storage/config/caddy/config:/config                  # json
    depends_on:
       - duckdns
################################################################################
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - TZ=${TZ}
      - SUBDOMAINS=$DUCKDNS_SUBDOMAINS
      - TOKEN=$DUCKDNS_TOKEN
    restart: unless-stopped
############################################################
  emby:
    container_name: emby
    image: linuxserver/emby
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /media/cached_storage/config/emby:/config
      - /media/storage/Videos/TV:/tvshows
      - /media/storage/Videos/Movies:/movies
      - /opt/vc/lib:/opt/vc/lib #Path for Raspberry Pi OpenMAX libs optional.
    devices:
#      - /dev/dri:/dev/dri #optional
      - /dev/vchiq:/dev/vchiq #optional
      - /dev/video10:/dev/video10 #optional
      - /dev/video11:/dev/video11 #optional
      - /dev/video12:/dev/video12 #optional
    ports:
      - 8096:8096
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8096"]
      interval: 30s
      timeout: 10s
      retries: 5  
################################################################################
  grafana:
    container_name: grafana
    image: grafana/grafana
    user: '${PUID}:${PGID}'
    volumes:
      - /media/cached_storage/config/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      automation:
        ipv4_address: 172.92.92.97
################################################################################
  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /media/storage/config/heimdall:/config
    ports:
      - 8080:80
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:80"]
      interval: 30s
      timeout: 10s
      retries: 5  
############################################################
  homeassistant:
    container_name: homeassistant
    image: homeassistant/raspberrypi4-homeassistant:stable
#   image: homeassistant/raspberrypi4-homeassistant:0.115.6
    volumes:
      - /media/storage/config/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /media/storage/config/homeassistant/docker/run:/etc/services.d/home-assistant/run
    restart: unless-stopped
    network_mode: host
    environment: 
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=007
      - PACKAGES=iputils
    depends_on:
      - caddy
      - mosquitto
      - homeassistant_db
      - node-red
      - influxdb
    extra_hosts:
      - "hass-db:172.92.92.92"
      - "influxdb:172.92.92.94"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://192.168.99.100:8123"]
      interval: 30s
      timeout: 10s
      retries: 6
############################################################
  homeassistant_db:
    container_name: homeassistant_db
    image: postgres
    user: '${PUID}:${PGID}'
    restart: unless-stopped
    volumes:
      - /media/cached_storage/config/homeassistant_db:/pgdata
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_DB=${HASS_DB_POSTGRES_DB}
      - POSTGRES_USER=${HASS_DB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${HASS_DB_POSTGRES_PASSWORD}
      - PGDATA=/pgdata
    networks:
      automation:
        ipv4_address: 172.92.92.92
################################################################################
  influxdb:
    container_name: influxdb
    image: influxdb
    user: '${PUID}:${PGID}'
    volumes:
      - /media/cached_storage/config/influxdb:/var/lib/influxdb
    networks:
      automation:
        ipv4_address: 172.92.92.94
  # Create the database
  # docker exec -it influxdb influx
  # CREATE DATABASE home_assistant
  # exit
################################################################################
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    user: $PUID:$PGID
    ports:
      - 1883:1883
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/storage/config/mosquitto:/mosquitto/config:ro
      - /media/storage/config/mosquitto:/mosquitto/data
    restart: unless-stopped
############################################################
  node-red:
    container_name: node-red
    image: nodered/node-red:latest-minimal
    environment:
      - TZ=$TZ
    ports:
      - 1880:1880
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/storage/config/node-red:/data
      - node-red-modules:/usr/src/node-red/node_modules
    restart: unless-stopped
    depends_on:
      - mosquitto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:1880"]
      interval: 30s
      timeout: 10s
      retries: 5
############################################################
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /media/storage/config/ombi:/config
    ports:
      - 3579:3579
    depends_on:
      - sonarr
      - radarr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3579"]
      interval: 30s
      timeout: 10s
      retries: 5  
############################################################
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - /media/cached_storage/config/radarr:/config
      - /media/storage/Videos/Movies:/movies
      - /media/storage/Downloads:/downloads
    ports:
      - 7878:7878
    depends_on:
      - jackett
      - transmission
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:7878"]
      interval: 30s
      timeout: 10s
      retries: 5  
############################################################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK_SET=022
    volumes:
      - /media/cached_storage/config/sonarr:/config
      - /media/storage/Videos/TV:/tv
      - /mnt/data1/Downloads:/downloads
    ports:
      - 8989:8989
    depends_on:
      - jackett
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8989"]
      interval: 30s
      timeout: 10s
      retries: 5  
############################################################
  transmission:
    image: linuxserver/transmission    
    container_name: transmission
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
#     - USER=$TRANSUSER
#     - PASS=$TRANSPASS
    volumes:
      - /media/storage/config/transmission:/config
      - /media/storage/Downloads:/downloads
      - /media/storage/Downloads/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9091"]
      interval: 30s
      timeout: 10s
      retries: 5  
################################################################################
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /media/storage/config/jackett:/config
      - /media/storage/Downloads/watch:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9117"]
      interval: 30s
      timeout: 10s
      retries: 5  
################################################################################
  nextcloud:
    image: nextcloud
    container_name: nextcloud
    volumes:
      - /media/storage/config/nextcloud:/var/www/html
    ports:
      - 9999:80
    links:
      - nextcloud_db:nextcloud_db
    restart: unless-stopped
    depends_on:
      - nextcloud_db
      - caddy
################################################################################
#   pihole:
#     image: pihole/pihole:latest
#     container_name: pihole
#     volumes:
#       - /media/storage/config/pihole/etc-pihole/:/etc/pihole/
#       - /media/storage/config/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
#     environment:
#       - TZ=$TZ
#       - WEBPASSWORD=${PiHolePass}
#     dns:
#       - "127.0.0.1"
#       - "1.1.1.1"
#     cap_add:
#       - NET_ADMIN
#     restart: unless-stopped
#     networks:
#       lan:
#         ipv4_address: 192.168.1.102
############################################################
#   podsync:
#     user: $PUID:$PGID
#     container_name: podsync
#     image: local/podsync
#     restart: always
#     ports:
#       - 8089:8089
#     volumes:
#       - /media/storage/Videos/Podsync/:/app/data/
#       - /media/storage/RSS/Podsync/config.toml:/app/config.toml
############################################################
  nextcloud_db:
    image: linuxserver/mariadb
    container_name: nextcloud_db
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - MYSQL_ROOT_PASSWORD=${NEXTC_DB_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${NEXTC_DB_MYSQL_DATABASE}
      - MYSQL_USER=${NEXTC_DB_MYSQL_USER}
      - MYSQL_PASSWORD=${NEXTC_DB_MYSQL_USER}
    volumes:
      - /media/cached_storage/config/nextcloud_db:/config
    ports:
      - 3307:3306
    restart: unless-stopped
############################################################
#   ptsooy:
#     image: pablogomez/ptsooy
#     container_name: ptsooy
#     environment:
#       - date_after=20200820
#       - vids_count=3
#       - host=https://ptsooy.alba-li.duckdns.org
#       - keep_newer_than=0 # days, 0 keeps all
#     volumes:
#       - /media/storage/config/ptsooy/subscription_manager:/app/subscription_manager
#       - /media/storage/Videos/Podcasts:/app/Videos/
#     restart: unless-stopped
#   ptsooy-webserver:
#     build: /media/storage/config/ptsooy/webserver/.
#     container_name: ptsooy-webserver
#     volumes:
#       - /media/storage/Videos/Podcasts/:/usr/share/nginx/html:ro
#     ports:
#       - 6969:80
